J = n_distinct(Nest),
y = Ncalls,
FoodTrt = ifelse(FoodTrt == "Deprived", 1, 0),
SexParent = ifelse(SexParent == "Male", 1, 0),
Nest = as.integer(as.factor(Nest))
))
library(R2jags)
warmup <- jags.model("jags_model.txt", data = dat_jags, n.chains = 4)
dat_jags$J
parms <- c("b")
samps <- coda.samples(warmup, parms, 1000, thin = 4)
plot(samps, density = F)
gelman.diag(samps)
cat("model {
for(i in 1:N) {
y[i] ~ dpois(yhat[i])
log(yhat[i]) <- beta0 + beta1 * FoodTrt[i] + beta2 * SexParent[i] +
b[Nest[i]]
}
for(j in 1:J) {
b[j] ~ dnorm(0, tau_b)
b_adj[j] <- b[j] - mean(b[j])
}
beta0 ~ dnorm(0, .001)
beta0_adj <- beta0 + mean(b)
beta1 ~ dnorm(0, .001)
beta2 ~ dnorm(0, .001)
tau_b <- pow(sig_b, -2)
sig_b ~ dunif(0, 1000)
}", file = "jags_model.txt")
dat_jags <- with(owls, list(
N = nrow(owls),
J = n_distinct(Nest),
y = Ncalls,
FoodTrt = ifelse(FoodTrt == "Deprived", 1, 0),
SexParent = ifelse(SexParent == "Male", 1, 0),
Nest = as.integer(as.factor(Nest))
))
library(R2jags)
warmup <- jags.model("jags_model.txt", data = dat_jags, n.chains = 4)
parms <- c("b_adj", "beta0_adj")
samps <- coda.samples(warmup, parms, 1000, thin = 4)
plot(samps, density = F)
cat("model {
for(i in 1:N) {
y[i] ~ dpois(yhat[i])
log(yhat[i]) <- beta0 + beta1 * FoodTrt[i] + beta2 * SexParent[i] +
b[Nest[i]]
}
for(j in 1:J) {
b[j] ~ dnorm(0, tau_b)
b_adj[j] <- b[j] - mean(b)
}
beta0 ~ dnorm(0, .001)
beta0_adj <- beta0 + mean(b)
beta1 ~ dnorm(0, .001)
beta2 ~ dnorm(0, .001)
tau_b <- pow(sig_b, -2)
sig_b ~ dunif(0, 1000)
}", file = "jags_model.txt")
dat_jags <- with(owls, list(
N = nrow(owls),
J = n_distinct(Nest),
y = Ncalls,
FoodTrt = ifelse(FoodTrt == "Deprived", 1, 0),
SexParent = ifelse(SexParent == "Male", 1, 0),
Nest = as.integer(as.factor(Nest))
))
library(R2jags)
warmup <- jags.model("jags_model.txt", data = dat_jags, n.chains = 4)
parms <- c("b_adj", "beta0_adj")
samps <- coda.samples(warmup, parms, 1000, thin = 4)
plot(samps, density = F)
gelman.diag(samps)
?gelman.diag
parms <- c("b_adj")
samps <- coda.samples(warmup, parms, 1000, thin = 4)
gelman.diag(samps)
parms <- c("beta0_adj", "sig_b")
samps <- coda.samples(warmup, parms, 1000, thin = 4)
gelman.diag(samps)
?version
version()
version
sessionInfo
?sessionInfo
library(stringr)
sessionInfo("stringr")
sessionInfo()
?stopifno
?stopifnot
?stop
if(iter > 10) stop("too many iterations")
iter <- 12
if(iter > 10) stop("too many iterations")
opts_chunk$set(fig.width=7.5,
fig.height=6,
out.width='\\linewidth',
fig.show='hold',
comment = "#>",
warning=F,
message=F,
tidy=T)
options(digits=4, show.signif.stars = FALSE)
set.seed(42)
library(xtable)
library(nlme)
library(lme4)
library(dplyr)
library(ggplot2)
library(gridExtra)
set.seed(42)
############ LEF data ################
n_sites_lef <- 4
n_plots_lef <- 2
n_trees_lef <- 6
n_cores_lef <- 1
dat_lef <- data_frame(
location = rep("LEF", n_sites_lef * n_plots_lef * n_trees_lef *n_cores_lef),
site = paste0("S", rep(1:n_sites_lef, each = n_plots_lef * n_trees_lef * n_cores_lef)),
plot = paste0("P", rep(1:n_plots_lef, each = n_trees_lef * n_cores_lef, times = n_sites_lef)),
tree = paste0("T", rep(1:n_trees_lef, each = n_cores_lef, times = n_sites_lef * n_plots_lef)),
core = paste0("C", rep(1:n_cores_lef, each = 1, times = n_sites_lef * n_plots_lef * n_trees_lef)),
species = ifelse(substr(tree, 2, 2) <= 3, "DF",
ifelse(site == "S1", "WL",
ifelse(site == "S2", "PP",
ifelse(site == "S3", "EB",
"DR")))),
elevation = ifelse(site %in% c("S1", "S2"), "H", "L"),
aspect = ifelse(site %in% c("S1", "S3"), "N", "S")
)
########## BZN data ################
n_sites_bzn <- 2
n_plots_bzn <- 2
n_trees_bzn <- 4
n_cores_bzn <- 4
dat_bzn <- data_frame(
location = rep("BZN", n_sites_bzn *n_plots_bzn * n_trees_bzn * n_cores_bzn),
site = paste0("S", rep(1:n_sites_bzn, each = n_plots_bzn * n_trees_bzn * n_cores_bzn, times = 1)),
plot = paste0("P", rep(1:n_plots_bzn, each = n_trees_bzn * n_cores_bzn, times = n_sites_bzn)),
tree = paste0("T", rep(1:n_trees_bzn, each = n_cores_bzn, times = n_sites_bzn * n_plots_bzn)),
core = paste0("C", rep(1:n_cores_bzn, each = 1, times = n_sites_bzn * n_plots_bzn * n_trees_bzn)),
species = rep("DF", n_sites_bzn *n_plots_bzn * n_trees_bzn * n_cores_bzn),
elevation = rep("H",  n_sites_bzn *n_plots_bzn * n_trees_bzn * n_cores_bzn),
aspect = ifelse(site %in% "S1", "N", "S")
)
######### merge locations and gen fake rho_b #############
sigma_location <- runif(1, 0, 1)
sigma_site <- runif(1, 0, 1)
sigma_plot <- runif(1, 0, 1)
sigma_tree <- 3*runif(1, 0, 1)
sigma_core <- runif(1, 0, 1)
sigma_e <- runif(1, 0, 1)
dat <- rbind(dat_lef, dat_bzn) %>%
filter(species == "DF") %>%
mutate(int = rnorm(1, 3, .5)) %>%
group_by(location) %>%
mutate(b_location = rnorm(1, 0, sigma_location)) %>%
group_by(location, site) %>%
mutate(b_site = rnorm(1, 0, sigma_site)) %>%
group_by(location, site, plot) %>%
mutate(b_plot = rnorm(1, 0, sigma_plot)) %>%
group_by(location, site, plot, tree) %>%
mutate(b_tree = rnorm(1, 0, sigma_tree)) %>%
group_by(location, site, plot, tree, core) %>%
mutate(b_core = rnorm(1, 0, sigma_core)) %>%
ungroup() %>%
mutate(epsilon = rnorm(n(), 0, sigma_e),
m_c = int + b_location + b_site + b_plot + b_tree + b_core + epsilon)
# find among core variability
by_core <- dat %>%
mutate(core = interaction(location, site, plot, tree, core),
tree = interaction(location, site, plot, tree),
plot = interaction(location, site, plot),
site = interaction(location, site))
# find within/between tree variability
by_tree = dat %>%
group_by(location, site, plot, tree) %>%
summarise(m_c = mean(m_c)) %>%
ungroup() %>%
mutate(tree = interaction(location, site, plot, tree),
plot = interaction(location, site, plot),
site = interaction(location, site))
# find within/between plot variability
by_plot = dat %>%
group_by(location, site, plot) %>%
summarise(m_c = mean(m_c)) %>%
ungroup() %>%
mutate(plot = interaction(location, site, plot),
site = interaction(location, site))
# find within/between site variability
by_site = dat %>%
group_by(location, site) %>%
summarise(m_c = mean(m_c)) %>%
ungroup() %>%
mutate(site = interaction(location, site))
fit_core <- lm(m_c ~ location/site/plot/tree, data = by_core)
anova(fit_core)
fit_tree = lm(m_c ~ location/site/plot, data = by_tree)
anova(fit_tree)
fit_plot = lm(m_c ~ location/site, data = by_plot)
anova(fit_plot)
fit_site <- lm(m_c ~ location, data = by_site)
anova(fit_site)
library(lme4)
fit.1 <- lmer(m_c ~ location + (1 | site/plot/tree), data=by_core)
summary(fit.1)
confint(fit.1)
confint(fit.1) ^ 2
data(faithful)
head(faithful)
plot(density(faithful$eruptions))
n <- nrow(faithful)
delta
delta <- 1.06 / (n ^ (1/5)) * sd(faithful$eruptions)
delta
vals <- (2 - faithful$eruptions) / delta
vals
dnorm(vals)
f2 <- 1 / n / delta * sum(dnorm(vals))
f2
vals <- (r - faithful$eruptions) / delta
vals <- (1 - faithful$eruptions) / delta
1 / n / delta * sum(dnorm(vals))
vals <- (3 - faithful$eruptions) / delta
1 / n / delta * sum(dnorm(vals))
knitr::opts_chunk$set(echo = T,
message = F,
warning = F,
cache = F,
fig.align = "center",
fig.pos = "H",
fig.width = 8,
fig.height = 5,
out.width = ".75\\linewidth",
tidy = F,
size = "small",
comment = "#>")
options(show.signif.stars = F,
digits = 4)
set.seed(42)
data(ex0823, package = "Sleuth2")
wine_data <- ex0823
library(ggplot2)
qplot(Wine, Mortality, data = wine_data, geom = c("point", "text"), label = Country) +
theme_bw()
dat <- data.frame(x = 1, y = rnorm(60))
write.csv(dat, file = "single-mean.csv", quote = F, row.names = F)
require(XML)
x <- readHTMLTable("http://www.imdb.com/title/tt0903747/eprate", which = 1)
library(ggplot2)
library(dplyr)
shows <- read.csv("~/Teaching/Stat-217/Spring-15/Ch-7/0-tv-shows/shows.csv") %>%
tbl_df()
shows %>%
group_by(show) %>%
mutate(Episode2 = Episode %>% as.factor %>% as.numeric,
Episode3 = Episode2 / max(Episode2)) %>%
qplot(Episode3, UserRating, data = ., geom = "smooth",
method = "lm", colour = show, linetype = show) +
ggtitle("IMDB Ratings") +
theme_bw() +
scale_x_continuous(name = "Episode",
labels = c("First", "Middle", "Last"),
breaks = c(0.01, .5, 1))
library(dplyr)
cig <- read.csv("Teaching/Stat-217/Spring-15/Projects/Proj5")
cig <- read.csv("Teaching/Stat-217/Spring-15/Projects/Proj5/cig.csv")
cor(cig)
cig <- read.csv("Teaching/Stat-217/Spring-15/Projects/Proj5/cig.csv") %>%
tbl_df()
glimpse(cig)
cor(cig %>% select(-brand))
cig %>% select(-brand) %>% lm(carbon ~ ., data = .)
cig %>% select(-brand) %>% lm(carbon ~ ., data = .) %>% summary
cig %>% select(-brand) %>% lm(carbon ~ ., data = .) %>% update(. ~ . - nicotine)
library(dplyr)
cig <- read.csv("cig.csv")
data_frame(brand = c("Brand of the cigarette"),
tar = "Tar Content (mg)",
nicotine = "Nicotine Content (mg)",
weight = "Weight (g)",
carbon = "Carbon monoxide content (mg)")
library(dplyr)
cig <- read.csv("cig.csv")
data_frame(Variable = c("brand", "tar", "nicotine", "weight", "carbon"),
Description = c("Brand of the cigarette",
"Tar Content (mg)",
"Nicotine Content (mg)",
"Weight (g)",
"Carbon monoxide content (mg)")
)
)
library(dplyr)
cig <- read.csv("cig.csv")
data_frame(Variable = c("brand", "tar", "nicotine", "weight", "carbon"),
Description = c("Brand of the cigarette",
"Tar Content (mg)",
"Nicotine Content (mg)",
"Weight (g)",
"Carbon monoxide content (mg)")
)
library(xtable)
library(dplyr)
library(xtable)
cig <- read.csv("cig.csv")
data_frame(Variable = c("brand", "tar", "nicotine", "weight", "carbon"),
Description = c("Brand of the cigarette",
"Tar Content (mg)",
"Nicotine Content (mg)",
"Weight (g)",
"Carbon monoxide content (mg)")) %>%
xtable(caption = "Description of Variables in Cigarette Data") %>%
print(table.placement = "H", include.rownames = F)
pairs(~tar + nicotine + weight + carbon, data = cig)
## make sure the data are imported as an object called cig
head(cig)
pairs(~tar + nicotine + weight + carbon, data = cig)
m1 <- lm(carbon ~ tar, data = cig)
m2 <- lm(carbon ~ tar + nicotine, data = cig)
m3 <- lm(carbon ~ tar + weight, data = cig)
m4 <- lm(carbon ~ tar + nicotine + weight, data = cig)
x <- c(23, 25, 20, 7.5, 33, 14, 6, 22, 24.5, 10, 20.5, 19, 13, 10, 20, 26.5, 8, 18, 16, 14, 14, 10, 17, 3, 5, 6, 16, 8.5, 20, 3, 9, 4, 12, 20, 30, 7, 17)
summary(x)
summary((85-x)/85*100)
30/85
36/85
cig <- read.csv("Teaching/Spring-15/Projects/Proj5/cig.csv")
cig <- read.csv("Teaching/Stat-217/Spring-15/Projects/Proj5/cig.csv")
cig
## make sure the data are imported as an object called cig
head(cig)
pairs(~tar + nicotine + weight + carbon, data = cig)
m1 <- lm(carbon ~ tar, data = cig)
m2 <- lm(carbon ~ tar + nicotine, data = cig)
m3 <- lm(carbon ~ tar + weight, data = cig)
m4 <- lm(carbon ~ tar + nicotine + weight, data = cig)
summary(m1)
summary(m2)
summary(m3)
summary(m4)
install.packages("readxl")
library(dplyr)
library(readxl)
dat <- read_excel("c:/users/chessa015/downloads/Interm Statistical Concepts_GradesExport_2015-04-16-14-20.xls")
setwd("c:/users/chessa015/downloads")
list.files()
dat <- read_excel("Interm Statistical Concepts_GradesExport_2015-04-16-14-20.xlsx")
list.files()
dat <- read.csv("Interm Statistical Concepts_GradesExport_2015-04-16-14-42.csv") %>%
tbl_df()
dat
dat %>% select(Homeworks.Subtotal.Numerator, Homeworks.Subtotal.Denominator, Projects.Subtotal.Numerator, Projects.Subtotal.Denominator)
dat %>% select(Username, Homeworks.Subtotal.Numerator, Homeworks.Subtotal.Denominator, Projects.Subtotal.Numerator, Projects.Subtotal.Denominator)
dat %>% select(Username, Homeworks.Subtotal.Numerator, Homeworks.Subtotal.Denominator, Projects.Subtotal.Numerator, Projects.Subtotal.Denominator)
dat
dat %>% select(Username, Homeworks.Subtotal.Numerator, Homeworks.Subtotal.Denominator, Projects.Subtotal.Numerator, Projects.Subtotal.Denominator,  Exam.1.Points.Grade..Numeric.MaxPoints.54.Category.Exams., Exam.2.Points.Grade..Numeric.MaxPoints.85.Category.Exams.)
dat %>%
select(Username, Homeworks.Subtotal.Numerator, Homeworks.Subtotal.Denominator, Projects.Subtotal.Numerator, Projects.Subtotal.Denominator,  Exam.1.Points.Grade..Numeric.MaxPoints.54.Category.Exams., Exam.2.Points.Grade..Numeric.MaxPoints.85.Category.Exams.) %>%
mutate(Homeworks = Homeworks.Subtotal.Numerator / Homeworks.Subtotal.Denominator,
Projects = Projects.Subtotal.Numerator / Projects.Subtotal.Denominator,
Exam1 =  Exam.1.Points.Grade..Numeric.MaxPoints.54.Category.Exams. / 54,
Exam2 = Exam.2.Points.Grade..Numeric.MaxPoints.85.Category.Exams. / 85) %>%
select(Homeworks, Projects, Exam1, Exam2)
dat %>%
select(Username, Homeworks.Subtotal.Numerator, Homeworks.Subtotal.Denominator, Projects.Subtotal.Numerator, Projects.Subtotal.Denominator,  Exam.1.Points.Grade..Numeric.MaxPoints.54.Category.Exams., Exam.2.Points.Grade..Numeric.MaxPoints.85.Category.Exams.) %>%
mutate(Homeworks = Homeworks.Subtotal.Numerator / Homeworks.Subtotal.Denominator,
Projects = Projects.Subtotal.Numerator / Projects.Subtotal.Denominator,
Exam1 =  Exam.1.Points.Grade..Numeric.MaxPoints.54.Category.Exams. / 54,
Exam2 = Exam.2.Points.Grade..Numeric.MaxPoints.85.Category.Exams. / 85) %>%
select(Username, Homeworks, Projects, Exam1, Exam2)
options(digits = 3)
dat <- read.csv("c:/users/chessa015/downloads/Interm Statistical Concepts_GradesExport_2015-04-16-14-42.csv") %>%
tbl_df()
dat %>%
select(Username, Homeworks.Subtotal.Numerator, Homeworks.Subtotal.Denominator, Projects.Subtotal.Numerator, Projects.Subtotal.Denominator,  Exam.1.Points.Grade..Numeric.MaxPoints.54.Category.Exams., Exam.2.Points.Grade..Numeric.MaxPoints.85.Category.Exams.) %>%
mutate(Homeworks = Homeworks.Subtotal.Numerator / Homeworks.Subtotal.Denominator,
Projects = Projects.Subtotal.Numerator / Projects.Subtotal.Denominator,
Exam1 =  Exam.1.Points.Grade..Numeric.MaxPoints.54.Category.Exams. / 54,
Exam2 = Exam.2.Points.Grade..Numeric.MaxPoints.85.Category.Exams. / 85) %>%
select(Username, Homeworks, Projects, Exam1, Exam2) %>%
mutate(Total = (.1*Homeworks + .2*Projects + .2*Exam1 + .2*Exam2) / .7 * 100)
dat %>%
select(Username, Homeworks.Subtotal.Numerator, Homeworks.Subtotal.Denominator, Projects.Subtotal.Numerator, Projects.Subtotal.Denominator,  Exam.1.Points.Grade..Numeric.MaxPoints.54.Category.Exams., Exam.2.Points.Grade..Numeric.MaxPoints.85.Category.Exams.) %>%
mutate(Homeworks = Homeworks.Subtotal.Numerator / Homeworks.Subtotal.Denominator,
Projects = Projects.Subtotal.Numerator / Projects.Subtotal.Denominator,
Exam1 =  Exam.1.Points.Grade..Numeric.MaxPoints.54.Category.Exams. / 54,
Exam2 = Exam.2.Points.Grade..Numeric.MaxPoints.85.Category.Exams. / 85) %>%
select(Username, Homeworks, Projects, Exam1, Exam2) %>%
mutate(Total = (.1*Homeworks + .2*Projects + .2*Exam1 + .2*Exam2) / .7 * 100) %>% summary
grades <- dat %>%
select(Username, Homeworks.Subtotal.Numerator, Homeworks.Subtotal.Denominator, Projects.Subtotal.Numerator, Projects.Subtotal.Denominator,  Exam.1.Points.Grade..Numeric.MaxPoints.54.Category.Exams., Exam.2.Points.Grade..Numeric.MaxPoints.85.Category.Exams.) %>%
mutate(Homeworks = Homeworks.Subtotal.Numerator / Homeworks.Subtotal.Denominator,
Projects = Projects.Subtotal.Numerator / Projects.Subtotal.Denominator,
Exam1 =  Exam.1.Points.Grade..Numeric.MaxPoints.54.Category.Exams. / 54,
Exam2 = Exam.2.Points.Grade..Numeric.MaxPoints.85.Category.Exams. / 85) %>%
select(Username, Homeworks, Projects, Exam1, Exam2) %>%
mutate(Total = (.1*Homeworks + .2*Projects + .2*Exam1 + .2*Exam2) / .7 * 100)
grades %>% arrange(desc(Total))
grades %>% arrange((Total))
grades %>% arrange(Username) %>% slice(1:40)
options(digits = 3,
dplyr.print_max = 40)
grades <- dat %>%
select(Username, Homeworks.Subtotal.Numerator, Homeworks.Subtotal.Denominator, Projects.Subtotal.Numerator, Projects.Subtotal.Denominator,  Exam.1.Points.Grade..Numeric.MaxPoints.54.Category.Exams., Exam.2.Points.Grade..Numeric.MaxPoints.85.Category.Exams.) %>%
mutate(Homeworks = Homeworks.Subtotal.Numerator / Homeworks.Subtotal.Denominator,
Projects = Projects.Subtotal.Numerator / Projects.Subtotal.Denominator,
Exam1 =  Exam.1.Points.Grade..Numeric.MaxPoints.54.Category.Exams. / 54,
Exam2 = Exam.2.Points.Grade..Numeric.MaxPoints.85.Category.Exams. / 85) %>%
select(Username, Homeworks, Projects, Exam1, Exam2) %>%
mutate(Total = (.1*Homeworks + .2*Projects + .2*Exam1 + .2*Exam2) / .7 * 100)
grades %>% arrange(Total)
grades %>% arrange(Username)
grades %>% mutate(Total = round(Total)) %>% arrange(Username)
setwd("~/")
rm(list=ls())
.75 * . + .9 * .3
.75 * .7 + .9 * .3
cig <- read.csv("C:/Users/chessa015/Downloads/cig.csv")
View(cig)
head(cig)
pairs(~tar + nicotine + weight + carbon, data = cig)
# the four models
m1 <- lm(carbon ~ tar, data = cig)
m2 <- lm(carbon ~ tar + nicotine, data = cig)
m3 <- lm(carbon ~ tar + weight, data = cig)
m4 <- lm(carbon ~ tar + nicotine + weight, data = cig)
par(mfrow = c(2,2)) # generate two rows and two columns of plots
plot(m1) # diagnostics plots for the model
par(mfrow = c(1,1))
par(mfrow = c(2,2)) # generate two rows and two columns of plots
plot(m2) # diagnostics plots for the model
par(mfrow = c(1,1))
.85 * .7 + 9 * .3
.85 * .7 + .9 * .3
.75 * .7 + .9 * .3
library(readr)
library(dplyr)
x <- read_csv("c:/users/chessa015/downloads/Consumer_Complaints.csv") %>% tbl_df()
x
require(plotKML)
z <- readGPX("c:/users/chessa015/downloads/Today, we explore/gpx")
z <- readGPX("c:/users/chessa015/downloads/Today, we explore.gpx")
str(z)
y <- z$tracks[[1]][[1]]
head(y)
qplot(lon, lat, data = y, geom = "path")
require(ggplot2)
qplot(lon, lat, data = y, geom = "path")
require(leaflet)
?leaflet
leaflet %>% addTiles()
leaflet() %>% addTiles()
summary(y)
mean(y$lon)
mean(y$lat)
?setView
leaflet %>% addTiles() %>% setView(lng = -112.0307, lat = 46.57573, zoom = 13)
leaflet() %>% addTiles() %>% setView(lng = -112.0307, lat = 46.57573, zoom = 13)
?addLines
leaflet() %>% addTiles() %>% setView(lng = -112.0307, lat = 46.57573, zoom = 10) %>% addPolyLines(lng = y$lon, lat = y$lat)
leaflet() %>% addTiles() %>% setView(lng = -112.0307, lat = 46.57573, zoom = 10) %>% addPolylines(lng = y$lon, lat = y$lat)
leaflet() %>% addTiles() %>% setView(lng = -112.0307, lat = 46.57573, zoom = 13) %>% addPolylines(lng = y$lon, lat = y$lat)
rm(list=ls())
library(plotKML)
library(leaflet)
k_tracks <- readGPX("~/temp/keenan_bike/Today, we explore.gpx")
devtools::install_github("timelyportfolio/listviewer")
y <- k_tracks$tracks[[1]][[1]]
library(listviewer)
jsonedit(y)
jsonedit(k_tracks)
p1 <- leaflet() %>%
addTiles() %>%
setView(lng = -112.0307, lat = 46.57573, zoom = 13) %>%
addPolylines(lng = y$lon, lat = y$lat)
p1
jsonedit(p1)
str(p1)
library(plotKML)
library(leaflet)
setwd("~/temp/keenan_bike")
k_tracks <- readGPX("Today, we explore.gpx")
head(y)
library(listviewer)
jsonedit(k_tracks)
y <- k_tracks$tracks[[1]][[1]]
head(y)
library(rgdal)
?SpatialPointsDataFrame
str(k_tracks)
library(listviewer)
jsonedit(k_tracks)
m1 <- lm(dist ~ speed, data = cars)
jsonedit(m1)
str(summary(m1))
head(subset(y, select = c(lat, lon)))
write.csv(subset(y, select = c(lat, lon)),
file = "keenan_gps.csv", quote = F, row.names = F)
?SpatialPointsDataFrame
dataMap.SP  <- SpatialPointsDataFrame(subset(y, select = c(lat, lon)))
dataMap.SP  <- SpatialPointsDataFrame(subset(y, select = c(lat, lon)), y)
str(dataMap.SP) # Now is class SpatialPointsDataFrame
?writeOGR
dataMap.SP  <- SpatialPoints(subset(y, select = c(lat, lon)))
str(dataMap.SP) # Now is class SpatialPointsDataFrame
?writeOGR
writeOGR(dataMap.SP, 'keenan_bike.geojson','dataMap', driver='GeoJSON')
dataMap.SP  <- SpatialPointsDataFrame(subset(y, select = c(lat, lon)), y)
str(dataMap.SP) # Now is class SpatialPointsDataFrame
#Write as geojson
writeOGR(dataMap.SP, 'keenan_bike.geojson','dataMap', driver='GeoJSON')
